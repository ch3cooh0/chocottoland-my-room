name: Build and Release

permissions:
  contents: write

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install or Verify GitHub CLI
      shell: pwsh
      run: |
        chcp 65001
        if (-not (Get-Command gh -ErrorAction SilentlyContinue)) {
          choco install gh -y
        }
        gh --version

    - name: Cache pnpm store
      uses: actions/cache@v3
      with:
        path: ~/.pnpm-store
        key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-

    - name: Install dependencies
      shell: pwsh
      run: |
        chcp 65001
        npm install -g pnpm
        cd chocotto-optimizer
        pnpm install

    - name: Build project
      shell: pwsh
      run: |
        chcp 65001
        cd chocotto-optimizer
        pnpm run build


    - name: Get version
      id: package_version
      shell: pwsh
      run: |
        chcp 65001
        cd chocotto-optimizer
        $version = node -p 'require("./package.json").version'
        echo "version=$version" >> $env:GITHUB_OUTPUT

    - name: Zip Data Directory
      shell: pwsh
      run: |
        chcp 65001
        Compress-Archive -Path "./chocotto-optimizer/data/*" -DestinationPath "./chocotto-optimizer/data.zip"

    - name: Create Release and Upload Assets
      shell: pwsh
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        chcp 65001
        gh release create v${{ steps.package_version.outputs.version }} `
          ./chocotto-optimizer/release/${{ steps.package_version.outputs.version }}/ちょこころね-${{ steps.package_version.outputs.version }}.exe `
          ./chocotto-optimizer/data.zip `
          --title "Release v${{ steps.package_version.outputs.version }}" `
          --notes ""
